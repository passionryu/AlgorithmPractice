1 정석적인 개념 정리

정의: DFS는 시작 정점에서 출발해 가능한 한 깊게(자식으로 자식으로) 내려가다가 더 이상 갈 곳이 없으면 가장 가까운 분기점으로 되돌아가 다른 경로를 탐색하는 그래프 탐색 알고리즘.

자료구조: 재귀(암묵적 call stack) 또는 명시적 Stack.

의사코드(재귀):

DFS(u):
  visited[u] = true
  for v in adj[u]:
    if not visited[v]:
      DFS(v)


복잡도

시간: O(V + E) — 모든 정점과 간선을 최대 한 번씩 본다.

공간: O(V) — visited 배열 + 재귀 깊이(최악 O(V)).

성질 / 활용

경로를 하나 깊게 완성 → 백트래킹 문제(퍼즐, 미로 탐색).

연결 컴포넌트 탐지, 사이클 탐지(방향/무방향 각각 방법 다름), 위상 정렬(토폴로지), 브리지/절단점(Articulation point), SCC(강한 연결 요소, Tarjan).

엣지 분류(유향 그래프에서)

Tree edge: DFS 트리에 속하는 간선.

Back edge: 조상으로 향하는 간선 → 사이클 존재.

Forward edge: 자신보다 나중에 발견된 자손으로 향하는 간선.

Cross edge: 서로 다른 서브트리 사이.

디스커버리/피니시 시간: 각 정점에 방문(발견) 시간과 완료(탐색 끝) 시간을 기록하면 위 분류와 분석이 가능.